//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTestClient.PlanRecuperacionWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlanRecuperacion", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceSchool.Dominio")]
    [System.SerializableAttribute()]
    public partial class PlanRecuperacion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivarReforzamientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivarTrabajoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaRegistroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdAlumnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCursoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdProfesorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdSeccionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivarReforzamiento {
            get {
                return this.ActivarReforzamientoField;
            }
            set {
                if ((this.ActivarReforzamientoField.Equals(value) != true)) {
                    this.ActivarReforzamientoField = value;
                    this.RaisePropertyChanged("ActivarReforzamiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivarTrabajo {
            get {
                return this.ActivarTrabajoField;
            }
            set {
                if ((this.ActivarTrabajoField.Equals(value) != true)) {
                    this.ActivarTrabajoField = value;
                    this.RaisePropertyChanged("ActivarTrabajo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionPlan {
            get {
                return this.DescripcionPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionPlanField, value) != true)) {
                    this.DescripcionPlanField = value;
                    this.RaisePropertyChanged("DescripcionPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistro {
            get {
                return this.FechaRegistroField;
            }
            set {
                if ((this.FechaRegistroField.Equals(value) != true)) {
                    this.FechaRegistroField = value;
                    this.RaisePropertyChanged("FechaRegistro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdAlumno {
            get {
                return this.IdAlumnoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdAlumnoField, value) != true)) {
                    this.IdAlumnoField = value;
                    this.RaisePropertyChanged("IdAlumno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCurso {
            get {
                return this.IdCursoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCursoField, value) != true)) {
                    this.IdCursoField = value;
                    this.RaisePropertyChanged("IdCurso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdPlan {
            get {
                return this.IdPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.IdPlanField, value) != true)) {
                    this.IdPlanField = value;
                    this.RaisePropertyChanged("IdPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdProfesor {
            get {
                return this.IdProfesorField;
            }
            set {
                if ((object.ReferenceEquals(this.IdProfesorField, value) != true)) {
                    this.IdProfesorField = value;
                    this.RaisePropertyChanged("IdProfesor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdSeccion {
            get {
                return this.IdSeccionField;
            }
            set {
                if ((object.ReferenceEquals(this.IdSeccionField, value) != true)) {
                    this.IdSeccionField = value;
                    this.RaisePropertyChanged("IdSeccion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Excepciones", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceSchool.Errores")]
    [System.SerializableAttribute()]
    public partial class Excepciones : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlanRecuperacionWS.IPlanRecuperaciones")]
    public interface IPlanRecuperaciones {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/CrearPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/CrearPlanResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTestClient.PlanRecuperacionWS.Excepciones), Action="http://tempuri.org/IPlanRecuperaciones/CrearPlanExcepcionesFault", Name="Excepciones", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceSchool.Errores")]
        WCFTestClient.PlanRecuperacionWS.PlanRecuperacion CrearPlan(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/CrearPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/CrearPlanResponse")]
        System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> CrearPlanAsync(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ObtenerPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ObtenerPlanResponse")]
        WCFTestClient.PlanRecuperacionWS.PlanRecuperacion ObtenerPlan(string IdPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ObtenerPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ObtenerPlanResponse")]
        System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> ObtenerPlanAsync(string IdPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ModificarPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ModificarPlanResponse")]
        WCFTestClient.PlanRecuperacionWS.PlanRecuperacion ModificarPlan(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ModificarPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ModificarPlanResponse")]
        System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> ModificarPlanAsync(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/EliminarPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/EliminarPlanResponse")]
        void EliminarPlan(string IdPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/EliminarPlan", ReplyAction="http://tempuri.org/IPlanRecuperaciones/EliminarPlanResponse")]
        System.Threading.Tasks.Task EliminarPlanAsync(string IdPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ListarPlanRecuperacion", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ListarPlanRecuperacionResponse")]
        WCFTestClient.PlanRecuperacionWS.PlanRecuperacion[] ListarPlanRecuperacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanRecuperaciones/ListarPlanRecuperacion", ReplyAction="http://tempuri.org/IPlanRecuperaciones/ListarPlanRecuperacionResponse")]
        System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion[]> ListarPlanRecuperacionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanRecuperacionesChannel : WCFTestClient.PlanRecuperacionWS.IPlanRecuperaciones, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanRecuperacionesClient : System.ServiceModel.ClientBase<WCFTestClient.PlanRecuperacionWS.IPlanRecuperaciones>, WCFTestClient.PlanRecuperacionWS.IPlanRecuperaciones {
        
        public PlanRecuperacionesClient() {
        }
        
        public PlanRecuperacionesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanRecuperacionesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanRecuperacionesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanRecuperacionesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFTestClient.PlanRecuperacionWS.PlanRecuperacion CrearPlan(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planACrear) {
            return base.Channel.CrearPlan(planACrear);
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> CrearPlanAsync(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planACrear) {
            return base.Channel.CrearPlanAsync(planACrear);
        }
        
        public WCFTestClient.PlanRecuperacionWS.PlanRecuperacion ObtenerPlan(string IdPlan) {
            return base.Channel.ObtenerPlan(IdPlan);
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> ObtenerPlanAsync(string IdPlan) {
            return base.Channel.ObtenerPlanAsync(IdPlan);
        }
        
        public WCFTestClient.PlanRecuperacionWS.PlanRecuperacion ModificarPlan(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planAModificar) {
            return base.Channel.ModificarPlan(planAModificar);
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion> ModificarPlanAsync(WCFTestClient.PlanRecuperacionWS.PlanRecuperacion planAModificar) {
            return base.Channel.ModificarPlanAsync(planAModificar);
        }
        
        public void EliminarPlan(string IdPlan) {
            base.Channel.EliminarPlan(IdPlan);
        }
        
        public System.Threading.Tasks.Task EliminarPlanAsync(string IdPlan) {
            return base.Channel.EliminarPlanAsync(IdPlan);
        }
        
        public WCFTestClient.PlanRecuperacionWS.PlanRecuperacion[] ListarPlanRecuperacion() {
            return base.Channel.ListarPlanRecuperacion();
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.PlanRecuperacionWS.PlanRecuperacion[]> ListarPlanRecuperacionAsync() {
            return base.Channel.ListarPlanRecuperacionAsync();
        }
    }
}
